#!/usr/bin/env python

from kobunsupport import load_config, handshake, read_line, write_line
from operator import itemgetter

import re
import sqlite3
import struct, socket
import urllib2

handshake("whereis")

config = load_config()

WHEREIS_EXPR = re.compile("!whereis (?P<args>.*)")

def quadToLong(ip):
    return struct.unpack('!L',socket.inet_aton(ip))[0]

# parse into ([ip, prefixlength], desc)
subnets = [ (x[1].split("/"), x[2][2:]) for x in filter(lambda x: len(x) == 3,
    [map(str.strip, line.strip().split("\t")) for line in filter(lambda x:
        x[0] != '#', urllib2.urlopen('ftp://ftp.net.berkeley.edu/pub/networks.local'))]) ]

# convert to (long_ip, subnet_mask, desc)
longsubnets = [ (quadToLong(x[0]), int(x[1]), y) for x, y in subnets ]
longsubnets.sort(key=itemgetter(1), reverse=True)
longsubnets = [ (x, (0xFFFFFFFF << (32 - int(y))) & 0xFFFFFFFF, z) for x, y, z in longsubnets ]
longsubnets = [ (x & y, y, z) for x, y, z in longsubnets ]

def findsubnet(ip):
    ip = quadToLong(socket.gethostbyname(ip))
    for x, y, z in longsubnets:
        if (x == (ip & y)):
            return z
    
while True:        
    server, prefix, command, args = read_line()

    if command.lower() == "privmsg":
        target, msg = args

        match = WHEREIS_EXPR.match(msg)
        if match is not None:
            try:
                place = msg[8:].strip()
                write_line(server, "PRIVMSG", [target, "{0} is {1}".format(place, findsubnet(place))])
            except Exception as e:
		write_line(server, "PRIVMSG", [target, "Python stinx: {0}".format(e)])
                #print e
        
# encoding: utf-8
