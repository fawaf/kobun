#!/usr/bin/env python2

from kobunsupport import load_config, handshake, read_line, write_line

import subprocess

handshake("only useful service")

config = load_config()

while True:
    server, prefix, command, args = read_line()

    if command.lower() == "privmsg":
        target, msg = args

        parts = msg.split(" ", 1)

        if parts[0].lower() == "!mueval" and len(parts) == 2:
            _, what = parts
            write_line(server, "PRIVMSG", [target, "\x02Mueval:\x02 " + \
                                                   " / ".join(subprocess.Popen(["./mueval-core",
                                                                                "-XViewPatterns",
                                                                                "-XTupleSections",
                                                                                "-XPatternGuards",
                                                                                "-XBangPatterns",
                                                                                "-XArrows",
                                                                                "-XUnicodeSyntax",
                                                                                "-XExistentialQuantification",
                                                                                "-XRankNTypes",
                                                                                "-XMultiWayIf",
                                                                                "-mPrelude",
                                                                                "-mData.Aviary.Birds",
                                                                                "-mData.Functor.Foldable",
                                                                                "-e", what],
                                                                               stdout=subprocess.PIPE,
                                                                               stderr=subprocess.STDOUT
                                                                              ).communicate()[0].strip().split("\n"))])
