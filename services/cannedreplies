#!/usr/bin/env python
# encoding: utf-8

from kobunsupport import load_config, handshake, read_line, write_line
from kobunsupport.gay import gay

import random
import ctypes

libgface = ctypes.cdll.LoadLibrary('./libgface.so.1.0.0')

libgface.gface_init.argtypes = [ctypes.c_char_p]
libgface.gface_acquire.restype = ctypes.c_wchar_p

def gface():
    libgface.gface_init("auREAX is a fag")
    gf = libgface.gface_acquire()
    libgface.gface_shutdown()
    return gf

handshake("erryday i'm gfacing")

config = load_config()


RESPONSES = {
#    lambda x: "gface" in x.lower():             u"( ‚âñ‚Äø‚âñ)",
    lambda x: "cool" in x.lower():              u"COOL LIKE SNOWMAN ‚òÉ",
    lambda x: "moe?" in x.lower():              "kyun!",
    lambda x: "http://25.media.tumblr.com/tumblr_m5n4y9l4mw1ryt8iao4_1280.jpg" in x.lower(): "NuclearPoweredKimJongIl is a faggot.",
    lambda x: "http://25.media.tumblr.com/734b4843e9fa5a70a034533081fa4a2d/tumblr_mgqb7lMEtI1qkgjnio1_1280.jpg" in x.lower(): "NuclearPoweredKimJongIl is a faggot.",
    lambda x: "gface" in x.lower():             gface,
    lambda x: "edgyface" in x.lower():          u"(„Ç±‚âñ‚Äø‚âñ)„Ç±",
#    lambda x: "cool" in x.lower():              u"COOL LIKE BANANA üçå ",
    lambda x: "chownface" in x.lower():         u"( ¬¥¬∑ ‚Äø ¬∑`)",
    lambda x: "adventure time" in x.lower():    u"| (‚Ä¢ ‚ó°‚Ä¢)|  (‚ùç·¥•‚ùç ã)",
    lambda x: "le-spj-face.jpg" in x.lower():   "http://dl.dropbox.com/u/2880866/le-spj-face.jpg",
    lambda x: "le-kobun-face.jpg" in x.lower(): "http://dl.dropbox.com/u/2880866/le-kobun-face.jpg",
    lambda x: x.strip() == "man":               "MAN",
    lambda x: x.strip() == "MAN":               "man",
    lambda x: "dface" in x.lower():             u"‡≤†_‡≤†",
    lambda x: "lenny" in x.lower():             u"( Õ°¬∞ Õú ñ Õ°¬∞)",
    lambda x: "goface" in x.lower():            u" ï ‚óîœñ‚óî î",
#    lambda x: x.strip() == "lol":               "r u havin a giggle m8?"
#    "gface":    u"( ‚âñ‚Äø‚âñ)",
}

def fuk_unicode(s):
    if isinstance(s, unicode):
        return s.encode("utf-8")
    return s


while True:
    server, prefix, command, args = read_line()

    if command.lower() == "privmsg":
        target, msg = args

        cands = []
        for cand, reply in RESPONSES.iteritems():
            if callable(reply): reply = reply()
            if cand(msg):
                cands.append(reply)

        if cands:
            write_line(server, "PRIVMSG", [target, fuk_unicode(random.choice(cands))])
            #write_line(server, "PRIVMSG", [target, random.choice(cands).encode("utf-8")])
