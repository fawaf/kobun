#!/usr/bin/env python2

from kobunsupport import load_config, handshake, read_line, write_line

import re
import requests
import urllib2

import gevent

from pyquery import PyQuery as pq
from requests.packages.chardet.universaldetector import UniversalDetector

handshake("display the title of a page")

config = load_config()

SCAN_EXPR = re.compile(r'http[s]?://[^\s<>"]+|www\.[^\s<>"]+')
DESPACE_EXPR = re.compile(r'\s+')

def worker(server, target, url):
    if not (url.startswith("http:") or url.startswith("https:")):
        url = "http://" + url
    try:
        response = requests.head(url)
    except requests.RequestException as e:
        write_line(server, "PRIVMSG", [target, "\x02Request Error:\x02 {}".format(e)])
        return

    content_type = response.headers.get("content-type", "text/html").split(";")[0]

    if content_type not in ("text/html",):
        write_line(server, "PRIVMSG", [target, "\x02Content Type:\x02 {}".format(content_type)])
    else:
        try:
            r = requests.get(url)
            try: # XXX: DIRTY HORRIBLE BUT WORKING HACK (ALSO REQUESTS IS DUM)
                if r.encoding == "ISO-8859-1":
                    u = UniversalDetector()
                    u.feed(r.content)
                    u.close()

                    if u.result['encoding']:
                        r.encoding = u.result['encoding']
                p = pq(r.text or '')
            except ValueError:
                p = pq(r.content or '')

            title = p("title").text()
            if title:
                title = DESPACE_EXPR.sub(" ", title.encode("utf-8").replace("\n", " "))

            write_line(server, "PRIVMSG", [
                target,
                "\x02Title:\x02 {}".format(title or "(no title)")
            ])
        except urllib2.HTTPError as e:
            write_line(server, "PRIVMSG", [target, "\x02Request Error:\x02 {}".format(e)])


def core():
    while True:
        server, prefix, command, args = read_line()

        if command.lower() == "privmsg":
            target, msg = args
            urls = SCAN_EXPR.findall(msg)

            if urls:
                url = urls[0]
                gevent.spawn(worker, server, target, url)

        gevent.sleep(0)

gevent.spawn(core).join()

